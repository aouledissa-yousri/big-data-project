version: '3.8'

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    environment:
      - CLUSTER_NAME=test-cluster
      - HADOOP_HEAPSIZE=512
      - HDFS_NAMENODE_OPTS=-Xms256m -Xmx512m
    ports:
      - "9870:9870"   # HDFS Web UI
      - "9000:9000"   # NameNode RPC
    volumes:
      - namenode-data:/hadoop/dfs/name
    networks:
      - hadoop

    deploy:
      resources:
        limits:
          memory: 2g
    
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    environment:
      - CLUSTER_NAME=test-cluster
      - HADOOP_HEAPSIZE=512
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - datanode-data:/hadoop/dfs/data
    ports:
      - "9864:9864"  # DataNode Web UI
    depends_on:
      - namenode
    networks:
      - hadoop
    deploy:
      resources:
        limits:
          memory: 2g
    
    ulimits:
      nofile:
        soft: 65536
        hard: 65536


  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    environment:
      - YARN_CONF_yarn_resourcemanager_hostname=resourcemanager
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    ports:
      - "8088:8088"  # YARN Web UI
    depends_on:
      - namenode
    networks:
      - hadoop

    mem_limit: 4g       # Set memory limit to 4 GB
    cpus: 2            # Use 2 CPU cores

  nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    environment:
      - YARN_CONF_yarn_resourcemanager_hostname=resourcemanager
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    depends_on:
      - resourcemanager
    networks:
      - hadoop

volumes:
  namenode-data:
  datanode-data:

networks:
  hadoop:
